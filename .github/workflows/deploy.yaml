name: Deploy to ECR and EKS

on:
  push:
    branches:
    - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: '1.1.0'

    - name: Terraform Init
      run: terraform init
      working-directory: ./home/ubuntu/n1co-test-devops/modules

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ./home/ubuntu/n1co-test-devops/modules
      env:
        TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
        # Add other necessary environment variables

  build:
    runs-on: ubuntu-latest

    needs: terraform

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install Dependencies
      run: npm install

    - name: Build Docker Image
      run: docker build -t ${{ secrets.AWS_REGION }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-ecr-repo-jocasmen .

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1
      with:
        region: ${{ secrets.AWS_REGION }}
        registry: ${{ secrets.AWS_REGION }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    - name: Push Docker Image to ECR
      run: docker push ${{ secrets.AWS_REGION }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-ecr-repo-jocasmen:latest

    - name: Deploy to EKS
      run: kubectl apply -f kubernetes/deployment.yaml
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        ECR_REPO_URL: ${{ secrets.AWS_REGION }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-ecr-repo-jocasmen
